{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9c994a0e",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-05-28T14:03:25.270510Z",
     "iopub.status.busy": "2025-05-28T14:03:25.270046Z",
     "iopub.status.idle": "2025-05-28T14:03:26.570217Z",
     "shell.execute_reply": "2025-05-28T14:03:26.569061Z"
    },
    "papermill": {
     "duration": 1.30824,
     "end_time": "2025-05-28T14:03:26.572526",
     "exception": false,
     "start_time": "2025-05-28T14:03:25.264286",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de75a4ba",
   "metadata": {
    "papermill": {
     "duration": 0.003533,
     "end_time": "2025-05-28T14:03:26.580534",
     "exception": false,
     "start_time": "2025-05-28T14:03:26.577001",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Que.1 Here is an example test set of 18 entities (7 actives, 11 decoys) that are shown in Table 1 in the ascending order of their scores. Their scores (probabilities to be ‘decoy’) are obtained by using Logistic Regression model M. \n",
    "Table 1. Example data for ROC\n",
    "id\tscore\tactive/decoy\tid\tscore\tactive/decoy\n",
    "O\t0.03\ta\t\tL\t0.48\ta\n",
    "J\t0.08\ta\t\tK\t0.56\td\n",
    "D\t0.10\td\t\tP\t0.65\td\n",
    "A\t0.11\ta\t\tQ\t0.71\td\n",
    "I\t0.22\td\t\tC\t0.72\td\n",
    "G\t0.32\ta\t\tN\t0.73\ta\n",
    "B\t0.35\ta\t\tH\t0.80\td\n",
    "M\t0.42\td\t\tR\t0.82\td\n",
    "F\t0.44\td\t\tE\t0.99\td\n",
    "\n",
    "We can manually set up the threshold t=0.48. Please calculate the four outcomes in the confusion matrix in this case. Calculate the precision, recall, sensitivity and specificity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "69b95549",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-28T14:03:26.589492Z",
     "iopub.status.busy": "2025-05-28T14:03:26.588987Z",
     "iopub.status.idle": "2025-05-28T14:03:28.709874Z",
     "shell.execute_reply": "2025-05-28T14:03:28.707832Z"
    },
    "papermill": {
     "duration": 2.128073,
     "end_time": "2025-05-28T14:03:28.712389",
     "exception": false,
     "start_time": "2025-05-28T14:03:26.584316",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True Positives (TP): 5\n",
      "False Positives (FP): 4\n",
      "True Negatives (TN): 7\n",
      "False Negatives (FN): 2\n",
      "Precision: 0.556\n",
      "Recall / Sensitivity: 0.714\n",
      "Specificity: 0.636\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix, precision_score, recall_score\n",
    "\n",
    "# Given data (id, score, label)\n",
    "data = [\n",
    "    (\"O\", 0.03, \"a\"), (\"J\", 0.08, \"a\"), (\"D\", 0.10, \"d\"), (\"A\", 0.11, \"a\"),\n",
    "    (\"I\", 0.22, \"d\"), (\"G\", 0.32, \"a\"), (\"B\", 0.35, \"a\"), (\"M\", 0.42, \"d\"),\n",
    "    (\"F\", 0.44, \"d\"), (\"L\", 0.48, \"a\"), (\"K\", 0.56, \"d\"), (\"P\", 0.65, \"d\"),\n",
    "    (\"Q\", 0.71, \"d\"), (\"C\", 0.72, \"d\"), (\"N\", 0.73, \"a\"), (\"H\", 0.80, \"d\"),\n",
    "    (\"R\", 0.82, \"d\"), (\"E\", 0.99, \"d\")\n",
    "]\n",
    "\n",
    "# Prepare labels and scores\n",
    "y_true = [1 if label == 'a' else 0 for _, _, label in data]  # 1 = active, 0 = decoy\n",
    "y_scores = [score for _, score, _ in data]\n",
    "\n",
    "# Apply threshold t = 0.48 to predict labels\n",
    "threshold = 0.48\n",
    "y_pred = [1 if score < threshold else 0 for score in y_scores]\n",
    "\n",
    "# Compute confusion matrix\n",
    "tn, fp, fn, tp = confusion_matrix(y_true, y_pred).ravel()\n",
    "\n",
    "# Calculate performance metrics\n",
    "precision = precision_score(y_true, y_pred)\n",
    "recall = recall_score(y_true, y_pred)  # same as sensitivity\n",
    "specificity = tn / (tn + fp)\n",
    "\n",
    "# Print results\n",
    "print(f\"True Positives (TP): {tp}\")\n",
    "print(f\"False Positives (FP): {fp}\")\n",
    "print(f\"True Negatives (TN): {tn}\")\n",
    "print(f\"False Negatives (FN): {fn}\")\n",
    "print(f\"Precision: {precision:.3f}\")\n",
    "print(f\"Recall / Sensitivity: {recall:.3f}\")\n",
    "print(f\"Specificity: {specificity:.3f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b20d9940",
   "metadata": {
    "papermill": {
     "duration": 0.004022,
     "end_time": "2025-05-28T14:03:28.721444",
     "exception": false,
     "start_time": "2025-05-28T14:03:28.717422",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For this small test set, the ROC curve can be drawn as a stepping function. Please calculate the TPRs and FPRs according to the threshold values. To achieve the highest resolution of the ROC curve, we can use {0.03, 0.08, 0.10, 0.11, 0.22, …, 0.82, 0.99} (i.e., all scores appear in the table) to be the set of all the possible threshold values. Therefore, you are required to calculate TPR and FPR in terms of the different thresholds. Then draw the ROC curve."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d47499a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-28T14:03:28.731273Z",
     "iopub.status.busy": "2025-05-28T14:03:28.730707Z",
     "iopub.status.idle": "2025-05-28T14:03:29.131198Z",
     "shell.execute_reply": "2025-05-28T14:03:29.129579Z"
    },
    "papermill": {
     "duration": 0.407665,
     "end_time": "2025-05-28T14:03:29.133158",
     "exception": false,
     "start_time": "2025-05-28T14:03:28.725493",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Threshold\tTPR\t\tFPR\n",
      "<0.00\t\t0.000\t\t0.000\n",
      "<0.03\t\t0.000\t\t0.000\n",
      "<0.08\t\t0.143\t\t0.000\n",
      "<0.10\t\t0.286\t\t0.000\n",
      "<0.11\t\t0.286\t\t0.091\n",
      "<0.22\t\t0.429\t\t0.091\n",
      "<0.32\t\t0.429\t\t0.182\n",
      "<0.35\t\t0.571\t\t0.182\n",
      "<0.42\t\t0.714\t\t0.182\n",
      "<0.44\t\t0.714\t\t0.273\n",
      "<0.48\t\t0.714\t\t0.364\n",
      "<0.56\t\t0.857\t\t0.364\n",
      "<0.65\t\t0.857\t\t0.455\n",
      "<0.71\t\t0.857\t\t0.545\n",
      "<0.72\t\t0.857\t\t0.636\n",
      "<0.73\t\t0.857\t\t0.727\n",
      "<0.80\t\t1.000\t\t0.727\n",
      "<0.82\t\t1.000\t\t0.818\n",
      "<0.99\t\t1.000\t\t0.909\n",
      ">1.00\t\t1.000\t\t1.000\n",
      "\n",
      "AUC = 0.779\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import auc\n",
    "\n",
    "# Step 1: Define the dataset\n",
    "data = [\n",
    "    (\"O\", 0.03, \"a\"), (\"J\", 0.08, \"a\"), (\"D\", 0.10, \"d\"), (\"A\", 0.11, \"a\"),\n",
    "    (\"I\", 0.22, \"d\"), (\"G\", 0.32, \"a\"), (\"B\", 0.35, \"a\"), (\"M\", 0.42, \"d\"),\n",
    "    (\"F\", 0.44, \"d\"), (\"L\", 0.48, \"a\"), (\"K\", 0.56, \"d\"), (\"P\", 0.65, \"d\"),\n",
    "    (\"Q\", 0.71, \"d\"), (\"C\", 0.72, \"d\"), (\"N\", 0.73, \"a\"), (\"H\", 0.80, \"d\"),\n",
    "    (\"R\", 0.82, \"d\"), (\"E\", 0.99, \"d\")\n",
    "]\n",
    "\n",
    "# Step 2: Prepare true labels and scores\n",
    "y_true = [1 if label == 'a' else 0 for _, _, label in data]\n",
    "y_scores = [score for _, score, _ in data]\n",
    "\n",
    "# Step 3: Unique sorted thresholds from scores\n",
    "thresholds = sorted(set(y_scores))\n",
    "\n",
    "# Step 4: Total positive and negative examples\n",
    "P = sum(y_true)\n",
    "N = len(y_true) - P\n",
    "\n",
    "# Step 5: Initialize TPR and FPR lists\n",
    "tpr_list = []\n",
    "fpr_list = []\n",
    "\n",
    "# Step 6: Compute TPR and FPR for each threshold\n",
    "for thresh in thresholds:\n",
    "    y_pred = [1 if score < thresh else 0 for score in y_scores]\n",
    "    tp = sum(1 for yp, yt in zip(y_pred, y_true) if yp == 1 and yt == 1)\n",
    "    fp = sum(1 for yp, yt in zip(y_pred, y_true) if yp == 1 and yt == 0)\n",
    "    tpr = tp / P if P else 0\n",
    "    fpr = fp / N if N else 0\n",
    "    tpr_list.append(tpr)\n",
    "    fpr_list.append(fpr)\n",
    "\n",
    "# Add (0,0) and (1,1) for completeness\n",
    "tpr_list = [0.0] + tpr_list + [1.0]\n",
    "fpr_list = [0.0] + fpr_list + [1.0]\n",
    "all_thresholds = [\"<0.00\"] + [f\"<{t:.2f}\" for t in thresholds] + [\">1.00\"]\n",
    "\n",
    "# Step 7: Print TPR and FPR at each threshold\n",
    "print(\"Threshold\\tTPR\\t\\tFPR\")\n",
    "for t, tpr, fpr in zip(all_thresholds, tpr_list, fpr_list):\n",
    "    print(f\"{t}\\t\\t{tpr:.3f}\\t\\t{fpr:.3f}\")\n",
    "\n",
    "# Step 8: Calculate AUC\n",
    "roc_auc = auc(fpr_list, tpr_list)\n",
    "print(f\"\\nAUC = {roc_auc:.3f}\")\n",
    "\n",
    "# Step 9: Plot the ROC Curve\n",
    "plt.figure(figsize=(6, 6))\n",
    "plt.plot(fpr_list, tpr_list, drawstyle='steps-post', marker='o', label=f\"AUC = {roc_auc:.2f}\")\n",
    "plt.plot([0, 1], [0, 1], linestyle='--', color='gray', label=\"Random Guess\")\n",
    "plt.xlabel(\"False Positive Rate (FPR)\")\n",
    "plt.ylabel(\"True Positive Rate (TPR)\")\n",
    "plt.title(\"ROC Curve - Stepwise from All Thresholds\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ffe3ee41",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-28T14:03:29.144743Z",
     "iopub.status.busy": "2025-05-28T14:03:29.144413Z",
     "iopub.status.idle": "2025-05-28T14:03:30.546672Z",
     "shell.execute_reply": "2025-05-28T14:03:30.544375Z"
    },
    "papermill": {
     "duration": 1.410351,
     "end_time": "2025-05-28T14:03:30.548724",
     "exception": false,
     "start_time": "2025-05-28T14:03:29.138373",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Per-Fold Results:\n",
      "\n",
      "Fold Train Loss     Test Loss      Train Acc      Test Acc       \n",
      "1    0.0768         0.0074         0.9583         1.0000         \n",
      "2    0.0548         1.2312         0.9833         0.9667         \n",
      "3    0.0285         1.2919         0.9833         0.9667         \n",
      "4    0.0800         0.0319         0.9583         1.0000         \n",
      "5    0.0631         0.1331         0.9667         0.9333         \n",
      "\n",
      "Average Across All 5 Folds:\n",
      "Mean Train Loss     : 0.0606\n",
      "Mean Test Loss      : 0.5391\n",
      "Mean Train Accuracy : 0.9700\n",
      "Mean Test Accuracy  : 0.9733\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.datasets import load_iris\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "from sklearn.metrics import log_loss, accuracy_score\n",
    "\n",
    "\n",
    "def euclidean_distance(x1, x2):\n",
    "    return np.sqrt(np.sum((x1 - x2) ** 2))\n",
    "\n",
    "def knn_predict(X_train, y_train, X_test, k=5):\n",
    "    y_pred = np.empty(X_test.shape[0], dtype=int)\n",
    "    for i, test_point in enumerate(X_test):\n",
    "        dist = np.array([euclidean_distance(test_point, x) for x in X_train])\n",
    "        indices = np.argsort(dist)[:k]\n",
    "        y_pred[i] = np.argmax(np.bincount(y_train[indices]))\n",
    "    return y_pred\n",
    "\n",
    "def knn_predict_proba(X_train, y_train, X_test, k=5):\n",
    "    classes = np.unique(y_train)\n",
    "    n_classes = len(classes)\n",
    "    prob_matrix = np.zeros((X_test.shape[0], n_classes))\n",
    "    for i, test_example in enumerate(X_test):\n",
    "        dist = np.array([euclidean_distance(test_example, x) for x in X_train])\n",
    "        indices = np.argsort(dist)[:k]\n",
    "        neighbors = y_train[indices]\n",
    "        for j, c in enumerate(classes):\n",
    "            prob_matrix[i, j] = np.sum(neighbors == c) / k\n",
    "    return prob_matrix\n",
    "\n",
    "iris_dataset = load_iris()\n",
    "X = iris_dataset.data\n",
    "y = iris_dataset.target\n",
    "\n",
    "#Cross Validation folds = 5\n",
    "skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n",
    "\n",
    "results = []\n",
    "\n",
    "# Cross-validation loop using our custom kNN (with k=5)\n",
    "for fold, (train_idx, test_idx) in enumerate(skf.split(X, y), 1):\n",
    "    X_train, X_test = X[train_idx], X[test_idx]\n",
    "    y_train, y_test = y[train_idx], y[test_idx]\n",
    "    \n",
    "    # kNN to predict labels and probabilities\n",
    "    y_train_pred = knn_predict(X_train, y_train, X_train, k=5)\n",
    "    y_test_pred = knn_predict(X_train, y_train, X_test, k=5)\n",
    "    \n",
    "    \n",
    "    y_train_prob = knn_predict_proba(X_train, y_train, X_train, k=5)\n",
    "    y_test_prob = knn_predict_proba(X_train, y_train, X_test, k=5)\n",
    "    \n",
    "    \n",
    "    train_loss = log_loss(y_train, y_train_prob)\n",
    "    test_loss = log_loss(y_test, y_test_prob)\n",
    "    train_acc = accuracy_score(y_train, y_train_pred)\n",
    "    test_acc = accuracy_score(y_test, y_test_pred)\n",
    "    \n",
    "    results.append((fold, train_loss, test_loss, train_acc, test_acc))\n",
    "\n",
    "\n",
    "print(\"Per-Fold Results:\\n\")\n",
    "print(f\"{'Fold':<5}{'Train Loss':<15}{'Test Loss':<15}{'Train Acc':<15}{'Test Acc':<15}\")\n",
    "for fold, train_loss, test_loss, train_acc, test_acc in results:\n",
    "    print(f\"{fold:<5}{train_loss:<15.4f}{test_loss:<15.4f}{train_acc:<15.4f}{test_acc:<15.4f}\")\n",
    "\n",
    "\n",
    "mean_train_loss = sum(r[1] for r in results) / len(results)\n",
    "mean_test_loss = sum(r[2] for r in results) / len(results)\n",
    "mean_train_acc = sum(r[3] for r in results) / len(results)\n",
    "mean_test_acc = sum(r[4] for r in results) / len(results)\n",
    "\n",
    "print(\"\\nAverage Across All 5 Folds:\")\n",
    "print(f\"{'Mean Train Loss':<20}: {mean_train_loss:.4f}\")\n",
    "print(f\"{'Mean Test Loss':<20}: {mean_test_loss:.4f}\")\n",
    "print(f\"{'Mean Train Accuracy':<20}: {mean_train_acc:.4f}\")\n",
    "print(f\"{'Mean Test Accuracy':<20}: {mean_test_acc:.4f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33c1e64f",
   "metadata": {
    "papermill": {
     "duration": 0.004601,
     "end_time": "2025-05-28T14:03:30.558574",
     "exception": false,
     "start_time": "2025-05-28T14:03:30.553973",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Problem 3 Please derive the gradient of the log likelihood function in logistic regression model with respect to , which is a vector and the model parameter. The log likelihood function is as follows:\n",
    "   \n",
    "\n",
    "where  is an example with  being the predicators and  being the label.  is the total number of examples."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "fa3c4ac2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-28T14:03:30.569727Z",
     "iopub.status.busy": "2025-05-28T14:03:30.569348Z",
     "iopub.status.idle": "2025-05-28T14:03:34.175751Z",
     "shell.execute_reply": "2025-05-28T14:03:34.174527Z"
    },
    "papermill": {
     "duration": 3.614496,
     "end_time": "2025-05-28T14:03:34.177952",
     "exception": false,
     "start_time": "2025-05-28T14:03:30.563456",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Gradient of the log-likelihood with respect to w1:\n",
      "   ⎛  ⎛ w₁⋅x₁ + w₂⋅x₂    ⎞    w₁⋅x₁ + w₂⋅x₂⎞\n",
      "x₁⋅⎝y⋅⎝ℯ              + 1⎠ - ℯ             ⎠\n",
      "────────────────────────────────────────────\n",
      "              w₁⋅x₁ + w₂⋅x₂                 \n",
      "             ℯ              + 1             \n",
      "\n",
      "Gradient of the log-likelihood with respect to w2:\n",
      "   ⎛  ⎛ w₁⋅x₁ + w₂⋅x₂    ⎞    w₁⋅x₁ + w₂⋅x₂⎞\n",
      "x₂⋅⎝y⋅⎝ℯ              + 1⎠ - ℯ             ⎠\n",
      "────────────────────────────────────────────\n",
      "              w₁⋅x₁ + w₂⋅x₂                 \n",
      "             ℯ              + 1             \n"
     ]
    }
   ],
   "source": [
    "import sympy as sp\n",
    "\n",
    "# Define symbolic variables\n",
    "w1, w2, x1, x2, y = sp.symbols('w1 w2 x1 x2 y', real=True)\n",
    "\n",
    "# Define the linear combination: z = w^T x\n",
    "z = w1 * x1 + w2 * x2\n",
    "\n",
    "# Define the sigmoid function sigma(z)\n",
    "sigma = 1 / (1 + sp.exp(-z))\n",
    "\n",
    "# Define the log-likelihood function for a single example:\n",
    "# f(w) = y*(w^T x) - log(1 + exp(w^T x))\n",
    "f = y * z - sp.log(1 + sp.exp(z))\n",
    "\n",
    "# Compute the gradient with respect to w1 and w2\n",
    "grad_w1 = sp.diff(f, w1)\n",
    "grad_w2 = sp.diff(f, w2)\n",
    "\n",
    "# Simplify the gradient expressions\n",
    "grad_w1_simplified = sp.simplify(grad_w1)\n",
    "grad_w2_simplified = sp.simplify(grad_w2)\n",
    "\n",
    "print(\"Gradient of the log-likelihood with respect to w1:\")\n",
    "sp.pretty_print(grad_w1_simplified)\n",
    "\n",
    "print(\"\\nGradient of the log-likelihood with respect to w2:\")\n",
    "sp.pretty_print(grad_w2_simplified)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5fe66e7a",
   "metadata": {
    "papermill": {
     "duration": 0.004829,
     "end_time": "2025-05-28T14:03:34.188287",
     "exception": false,
     "start_time": "2025-05-28T14:03:34.183458",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Problem 4 Program your own logistic regression classifier with python by implementing a gradient\n",
    "decent algorithm to find the optimal w LL(w)\n",
    "that maximizes in Problem 1. That is to\n",
    "find solution to:\n",
    "max\n",
    "w ((i=1to n) ∑ yiwT xi− log(1 + exp(wT xi)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "68d65caf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-28T14:03:34.200019Z",
     "iopub.status.busy": "2025-05-28T14:03:34.199503Z",
     "iopub.status.idle": "2025-05-28T14:03:34.472706Z",
     "shell.execute_reply": "2025-05-28T14:03:34.470989Z"
    },
    "papermill": {
     "duration": 0.281591,
     "end_time": "2025-05-28T14:03:34.474960",
     "exception": false,
     "start_time": "2025-05-28T14:03:34.193369",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Iteration 100: Log-Likelihood = -9.7082\n",
      "Iteration 200: Log-Likelihood = -9.6778\n",
      "Iteration 300: Log-Likelihood = -9.6769\n",
      "Iteration 400: Log-Likelihood = -9.6769\n",
      "Iteration 500: Log-Likelihood = -9.6769\n",
      "Iteration 600: Log-Likelihood = -9.6769\n",
      "Iteration 700: Log-Likelihood = -9.6769\n",
      "Iteration 800: Log-Likelihood = -9.6769\n",
      "Iteration 900: Log-Likelihood = -9.6769\n",
      "Iteration 1000: Log-Likelihood = -9.6769\n",
      "\n",
      "Optimal weights: [ 1.41498949 -4.24692766]\n",
      "Final Log-Likelihood: -9.676909118976168\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#Data from table 1\n",
    "data = [\n",
    "    (\"O\", 0.03, 'a'),\n",
    "    (\"J\", 0.08, 'a'),\n",
    "    (\"D\", 0.10, 'd'),\n",
    "    (\"A\", 0.11, 'a'),\n",
    "    (\"I\", 0.22, 'd'),\n",
    "    (\"G\", 0.32, 'a'),\n",
    "    (\"B\", 0.35, 'a'),\n",
    "    (\"M\", 0.42, 'd'),\n",
    "    (\"F\", 0.44, 'd'),\n",
    "    (\"L\", 0.48, 'a'),\n",
    "    (\"K\", 0.56, 'd'),\n",
    "    (\"P\", 0.65, 'd'),\n",
    "    (\"Q\", 0.71, 'd'),\n",
    "    (\"C\", 0.72, 'd'),\n",
    "    (\"N\", 0.73, 'a'),\n",
    "    (\"H\", 0.80, 'd'),\n",
    "    (\"R\", 0.82, 'd'),\n",
    "    (\"E\", 0.99, 'd')\n",
    "]\n",
    "\n",
    "#Extract feature (score) and label\n",
    "s_list = [row[1] for row in data] \n",
    "y_list = [1 if row[2]=='a' else 0 for row in data]\n",
    "\n",
    "s = np.array(s_list) \n",
    "y = np.array(y_list) \n",
    "\n",
    "\n",
    "X = np.column_stack((np.ones(len(s)), s))  \n",
    "\n",
    "\n",
    "def log_likelihood(w, X, y):\n",
    "    z = X.dot(w)\n",
    "    return np.sum(y * z - np.log(1 + np.exp(z)))\n",
    "    \n",
    "def sigmoid(z):\n",
    "    return 1 / (1 + np.exp(-z))\n",
    "\n",
    "def gradient(w, X, y):\n",
    "    z = X.dot(w)\n",
    "    pred = sigmoid(z)\n",
    "    return X.T.dot(y - pred)\n",
    "\n",
    "# Gradient ascent parameters\n",
    "learning_rate = 0.1\n",
    "num_iters = 1000\n",
    "\n",
    "\n",
    "weight = np.zeros(X.shape[1])\n",
    "\n",
    "\n",
    "ll_history = []\n",
    "\n",
    "# Gradient descent \n",
    "for i in range(num_iters):\n",
    "    grads = gradient(weight, X, y)\n",
    "    weight = weight + learning_rate * grads  # update rule for gradient ascent\n",
    "    ll = log_likelihood(weight, X, y)\n",
    "    ll_history.append(ll)\n",
    "   \n",
    "    if (i + 1) % 100 == 0:\n",
    "        print(f\"Iteration {i+1}: Log-Likelihood = {ll:.4f}\")\n",
    "\n",
    "# Final optimal weights and log-likelihood\n",
    "print(\"\\nOptimal weights:\", weight)\n",
    "print(\"Final Log-Likelihood:\", ll_history[-1])\n",
    "\n",
    "def plot_log_likelihood(ll_history):\n",
    "    plt.figure(figsize=(8, 5))\n",
    "    plt.plot(ll_history)\n",
    "    plt.xlabel(\"Iteration\")\n",
    "    plt.ylabel(\"Log-Likelihood\")\n",
    "    plt.title(\"Log-Likelihood over Iterations (Gradient Ascent)\")\n",
    "    plt.grid(True)\n",
    "    plt.show()\n",
    "\n",
    "plot_log_likelihood(ll_history)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c45b6e31",
   "metadata": {
    "papermill": {
     "duration": 0.009054,
     "end_time": "2025-05-28T14:03:34.493094",
     "exception": false,
     "start_time": "2025-05-28T14:03:34.484040",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "problem 5 Program with python a function that plots an ROC curve with input of a vector\n",
    "containing the true label and another vector containing the predicted probabilities of class\n",
    "membership for a set of examples."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ff029777",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-28T14:03:34.512118Z",
     "iopub.status.busy": "2025-05-28T14:03:34.511563Z",
     "iopub.status.idle": "2025-05-28T14:03:34.745589Z",
     "shell.execute_reply": "2025-05-28T14:03:34.744469Z"
    },
    "papermill": {
     "duration": 0.24563,
     "end_time": "2025-05-28T14:03:34.747652",
     "exception": false,
     "start_time": "2025-05-28T14:03:34.502022",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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pWHSpEmoX78+9u7di1mzZiE9Pf2hY0/37t2LVq1awdraWq/8jz/+QKNGjR449KIqJk+ejJiYGEydOhWBgYG4efMmdu/ejdOnT6NDhw548803cefOHVy9ehX//e9/AQCOjo4AgMLCQvTp0wfnz5/H1KlT0bBhQ6xevRrjx4/H7du3MX36dL1z/frrr1CpVHjppZeQnZ2Nzz77DCNGjEC/fv2QkJCA119/HefPn8dXX32FV155BYsWLapSnW7duoXBgwdj1KhRGD58OL799luMGjUKv/76K2bMmIHJkydjzJgx+PzzzxEdHY3U1FQ4OTnpHWPEiBEICAjAnDlz8Ndff+F///sfbt269cCvrw1t+0e5Hr/88gvGjRuHsLAwfPrppygoKMC3336LHj164MiRIwgICNBtq9FoEBYWhqCgIHzxxRf4888/8eWXX6Jx48Z44YUXULduXXz77bd44YUXMGzYMERGRgIA2rRpAwCIj4/HxYsXMWHCBHh7e+uGs5w8eRJ//fUXZDIZIiMjcfbsWfz222/473//Cw8PDwBA3bp1K7xW169fR7du3VBQUIBp06ahTp06+PnnnzFkyBDExMRg2LBhett/8sknkMvleOWVV3Dnzh189tlnePLJJ7Fv3z697QIDA2FnZ4c9e/aUOwaRWZA6myaqDcp6Zv/8809x48YNkZqaKmJiYkTdunWFjY2NSE1N1W07b948AUCsXbv2vsfLzs4WAERkZKQQQoj58+c/dJ+HGTZsmAAgbt26VantDe2ZdXZ2FpmZmXrbfvfddwKAOH78uF55YGCg6Nevn275gw8+EA4ODuLs2bN6273xxhtCoVCIK1euPDBWPz8/ERUVpVd2584dAUAMHTr0gfveW4/K9My6uLiIKVOmPPB49xtmUNb+y5Yt05WpVCrRtWtX4ejoKHJycvTiqVu3rrh9+7Zu21mzZgkAom3btno9+6NHjxZKpVIUFRU9MK779cwCEMuXL9eVlfWel/Wyl9myZUu561R2zCFDhuid68UXXxQAxLFjx3Rl9/Y2VrbtH/V65ObmCldX13LfTGRkZAgXFxe98nHjxgkA4v3339fbtn379qJjx4665QcNMygoKChX9ttvvwkAIjExUVf2oGEG916rGTNmCABi165durLc3FzRsGFDERAQoOvJLuuZbdGihd5wn7L/R+59PwohRLNmzcTAgQPLlROZA85mQFSNgoODUbduXfj7+yM6OhoODg5Yv349/Pz8dNvk5uYCQLlerbuVrcvJydH790H7PIwxjvEgUVFR5XqUIiMjYWVlhZUrV+rKTpw4gVOnTmHkyJG6stWrV6Nnz55wc3NDVlaW7ic4OBgajQaJiYkPPPfNmzf1er8B09bX1dUV+/btw7Vr1wzeNy4uDt7e3hg9erSuzNraGtOmTUNeXh527typt/3w4cP1bmoLCgoCADz11FN6PftBQUFQqVT3nT3jYRwdHTFq1Cjd8mOPPQZXV1e0aNFCd867z3/x4sVyx5gyZYre8ksvvQSgtM73Y2jbV/V6xMfH4/bt2xg9erTeeRQKBYKCgrBjx45ysU2ePFlvuWfPnhXWuyJ2dna610VFRcjKykKXLl0AAIcPH67UMe4VFxeHzp07o0ePHroyR0dHPP/887h06RJOnTqlt/2ECROgVCr14gcqbruy609kjjjMgKgaLViwAM2aNcOdO3ewaNEiJCYmwsbGRm+bsuSqLKmtyL0Jr7Oz80P3eZi7j3HvXdPG0LBhw3JlHh4e6N+/P1atWoUPPvgAQOkQAysrK93XsgBw7tw5/P333/f9ejUzM/Oh5xdC6C0b45rdz2effYZx48bB398fHTt2xKBBgzB27Fg0atTooftevnwZTZs2LXeXeosWLXTr71a/fn295bJEzt/fv8LyW7duGVaZf/j5+UEmk5U7piHnadq0qd5y48aNIZfLdcNtKmJo21f1epw7dw4A0K9fvwrPU/b7UsbW1rZcTG5ubpW+vtnZ2Zg9ezZWrFhRrg537typ1DHudfnyZb0PFmXu/t1p1aqVrvzea1X2ga+iOgghyrU/kblgMktUjTp37oxOnToBACIiItCjRw+MGTMGZ86c0Y2ZLPvD8/fffyMiIqLC4/z9998ASseyAUDz5s0BAMePH7/vPg9z9zHKemgeRCaTlUsQgdKxhBW5uyfqbqNGjcKECRNw9OhRtGvXDqtWrUL//v114wOB0gcehISE4LXXXqvwGM2aNXtgrHXq1Cn3B9rZ2Rn16tXDiRMnHrhvmfv9Ia+oviNGjEDPnj2xdu1abN26FZ9//jk+/fRTxMbGYuDAgZU6X2Xdb4z0/corajOpzlOZ5MjQtq9qnFqtFkDpuFlvb+9y2907fr2qY9PLjBgxAnv37sWrr76Kdu3awdHREVqtFgMGDNDFYmqGtN2tW7fKfRghMhdMZokkolAoMGfOHPTt2xdff/013njjDQBAjx494OrqiuXLl+PNN9+s8A9O2Q0zgwcP1u3j5uaG3377Df/3f/9XpT+04eHhmDNnDpYtW1apZNbNza3CryPv7Tl8mIiICEyaNEk31ODs2bOYNWuW3jaNGzdGXl4egoODDTp2mebNmyMlJaVc+eDBg/H9998jKSkJXbt2feAxynqt7p28/n719fHxwYsvvogXX3wRmZmZ6NChAz766CNdMnu/RK5Bgwb4+++/odVq9Xpnk5OTdest1blz5/R66M+fPw+tVqt3Y9W9HrXtK6tx48YAAE9PT6Od635tfOvWLWzbtg2zZ8/GO++8oysv6x2uzDEq0qBBA5w5c6Zc+aP+7pSUlCA1NRVDhgyp0v5EpsYxs0QS6tOnDzp37ox58+ahqKgIAGBvb49XXnkFZ86cwZtvvllun40bN2LJkiUICwvTjbGzt7fH66+/jtOnT+P111+vsGdl2bJl2L9//31j6dq1KwYMGIAff/wR69atK7depVLhlVde0S03btwYycnJuHHjhq7s2LFj2LNnT6XrD5SOLw0LC8OqVauwYsUKKJXKcr3LI0aMQFJSErZs2VJu/9u3b6OkpOSB5+jatStOnDiB4uJivfLXXnsNDg4OeO6553D9+vVy+124cAHz588HUNqT6+HhUW6M5jfffKO3rNFoyn1N7OnpiXr16umd38HBocKvkwcNGoSMjAy9ccQlJSX46quv4OjoiN69ez+wruZswYIFestfffUVADywt/pR276ywsLC4OzsjI8//hhqtbrc+rt/zyvL3t4eQPkPQGUfNu99n1Y0K4eDg0OFx6jIoEGDsH//fiQlJenK8vPz8f333yMgIED3TY6hTp06haKiIqPP+kFkLOyZJZLYq6++iuHDh2PJkiW6G0reeOMNHDlyBJ9++imSkpIQFRUFOzs77N69G8uWLUOLFi3w888/lzvOyZMn8eWXX2LHjh2Ijo6Gt7c3MjIysG7dOuzfvx979+59YCxLly5FaGgoIiMjER4ejv79+8PBwQHnzp3DihUrkJ6eji+++AIA8Mwzz2Du3LkICwvDs88+i8zMTCxcuBAtW7bU3VxVWSNHjsRTTz2Fb775BmFhYeXG7L766qtYv349Bg8ejPHjx6Nj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MktERGQkZcMKdu3aBQDw8vJCdHQ0PDw8JI6MqOZiMktERGQk169fx+7duwEAHTt2RFhYGKytrSWOiqhmYzJLRERkJD4+PggJCYGTkxNatWoldThEtQKTWSIioirSaDRISEhAmzZtULduXQBA165dJY6KqHbh1FxERERVcOfOHSxZsgS7d+9GTEwMNBqN1CER1UrsmSUiIjLQmTNnsG7dOhQVFcHGxga9e/eGQqGQOiyiWonJLBERUSVpNBrEx8dj3759AIB69eohOjoabm5uEkdGVHsxmSUiIqqE/Px8LF++HNeuXQMAdOnSBcHBweyRJZIYk1kiIqJKsLOzg5WVFWxtbREREYHHHntM6pCICExmiYiI7qukpAQymQwKhQJyuRxRUVHQarVwdXWVOjQi+gdnMyAiIqpAdnY2fvrpJ8THx+vKnJ2dmcgSmRn2zBIREd3jxIkT+OOPP6BSqZCTk4NevXrB3t5e6rCIqAJMZomIiP6hVquxefNmHD58GABQv359REVFMZElMmNMZomIiABkZWVh9erVyMzMBAD07NkTffr0gVzOEXlE5ozJLBER1XolJSVYunQpcnNz4eDggGHDhqFx48ZSh0VElfBIyWxRURFsbW2NFQsREZEkrKysEBYWhoMHDyIyMhJOTk5Sh0RElWTwdydarRYffPABfH194ejoiIsXLwIA3n77bfz0009GD5CIiMgUMjMzcfnyZd1yy5YtMXbsWCayRBbG4GT2ww8/xJIlS/DZZ59BqVTqylu1aoUff/zRqMEREREZmxACR44cwQ8//IBVq1YhNzdXt04mk0kYGRFVhcHJ7NKlS/H999/jySef1HuEX9u2bZGcnGzU4IiIiIxJpVJh3bp1WL9+PUpKSuDt7c0bvIgsnMFjZtPS0tCkSZNy5VqtFmq12ihBERERGdv169exevVq3Lx5EzKZDH379kWPHj3YG0tk4QxOZgMDA7Fr1y40aNBArzwmJgbt27c3WmBERETGIITA4cOHsXnzZpSUlMDJyQlRUVHl/o4RkWUyOJl95513MG7cOKSlpUGr1SI2NhZnzpzB0qVLsWHDBlPESEREVGUymQypqakoKSlBkyZNMGzYMD4EgagGMTiZHTp0KP744w+8//77cHBwwDvvvIMOHTrgjz/+QEhIiCliJCIiMpgQQjeEYNCgQfDz80PHjh05rICo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hYODg0hPT9fbv6CgQPj6+ooBAwaUu255eXnlzld23SrywgsvCAcHB5GWllZuXW5urlCr1bprtnbtWr31Li4uYvHixXp1WrFihejVq5ewsbER8+bNE7a2tmLDhg16+8XGxgpHR0eRn58vhBDiypUrYvjw4cLFxUW4ubmJIUOGiJSUlArjreh3u4wh+Rp7ZmuQ/Px8xMbG4uLFiwCANm3a4IknnnjkJ2sQEZF5KSgAHB2NcywhgKtXAReXym2flwc4ODx8u+zsbGzevBkfffQRHBwckJOTo7fekB7Ct99+G6dOncKmTZvg4eGB8+fPo7CwEACwf/9+dO7cWdczWvY3b/78+fjyyy/x3XffoX379li0aBGGDBmCkydPomnTprpjv/vuu5g3bx7q16+PZ555BmPGjIGTkxPmz58Pe3t7jBgxAu+88w6+/fbbSsVaWFiIpUuXAvh36imtVosVK1bgySefhLe3t972dnZ2ePHFF/HWW28hOzsbAPSu273ud93uPke9evXKrXeswi/MG2+8gS+//BLt27eHUqnEjh078Ntvv+GJJ57QbfPrr78iIiIC9vb2UKvVCAsLQ9euXbFr1y5YWVnhww8/xIABA/D333+bLB9hMluDpKWl4eLFi7CyssKgQYPQrl07zlZARESSOH/+PIQQaN68+SMf68qVK2jfvj06deoEAAgICNCtq1u3LgCgTp06eoniF198gddffx2jRo0CAHz66afYsWMH5s2bhwULFui2e+WVVxAWFgYAmD59OkaPHo1t27ahe/fuAIBnn30WS5YseWiM3bp1g1wuR0FBAYQQ6NixI/r37w8AuHHjBm7fvo0WLVpUuG+LFi0ghMD58+cBoErXLSsrC7du3TLK9S4zY8YMRP4z/kSr1WL48OGYPHkyCgoKYG9vj5ycHGzcuBFr164FAKxcuRJarRY//vijLv9YvHgxXF1dkZCQgNDQUKPFdjcmszVIs2bNEBoaisaNG8PT01PqcIiIyETs7Ut7SCsjMREYNOjh28XFAb16Ve7clSGMeLPRCy+8gKioKBw+fBihoaGIiIhAt27d7rt9Tk4Orl27pktIy3Tv3h3Hjh3TK2vTpo3uddn41tatW+uVZWZmPjTGlStXonnz5jhx4gRee+01LFmypNyDACpzTap63Yx5vcuUfXgoExISAmtra6xfvx6jRo3CmjVr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\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Thresholds: [0.03, 0.08, 0.1, 0.11, 0.22, 0.32, 0.35, 0.42, 0.44, 0.48, 0.56, 0.65, 0.71, 0.72, 0.73, 0.8, 0.82, 0.99]\n",
      "FPR: 1.0\n",
      "TPR: 1.0\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def custom_roc_curve(y_true, y_prob):\n",
    "\n",
    "    thresholds = np.sort(np.unique(y_prob))[::-1]    \n",
    "\n",
    "    thresholds = np.concatenate(([thresholds[0] + 1], thresholds, [thresholds[-1] - 1]))\n",
    "    \n",
    "    tpr_list = []\n",
    "    fpr_list = []\n",
    "    \n",
    "    for thr in thresholds:\n",
    "\n",
    "        y_pred = (y_prob >= thr).astype(int)\n",
    "        \n",
    "        TP = np.sum((y_true == 1) & (y_pred == 1))\n",
    "        FN = np.sum((y_true == 1) & (y_pred == 0))\n",
    "        FP = np.sum((y_true == 0) & (y_pred == 1))\n",
    "        TN = np.sum((y_true == 0) & (y_pred == 0))\n",
    "        \n",
    "        TPR = TP / (TP + FN) if (TP + FN) > 0 else 0\n",
    "        FPR = FP / (FP + TN) if (FP + TN) > 0 else 0\n",
    "        \n",
    "        tpr_list.append(TPR)\n",
    "        fpr_list.append(FPR)\n",
    "    \n",
    "    return np.array(fpr_list), np.array(tpr_list), thresholds\n",
    "\n",
    "data = [\n",
    "    (\"O\", 0.03, \"a\"),\n",
    "    (\"J\", 0.08, \"a\"),\n",
    "    (\"D\", 0.10, \"d\"),\n",
    "    (\"A\", 0.11, \"a\"),\n",
    "    (\"I\", 0.22, \"d\"),\n",
    "    (\"G\", 0.32, \"a\"),\n",
    "    (\"B\", 0.35, \"a\"),\n",
    "    (\"M\", 0.42, \"d\"),\n",
    "    (\"F\", 0.44, \"d\"),\n",
    "    (\"L\", 0.48, \"a\"),\n",
    "    (\"K\", 0.56, \"d\"),\n",
    "    (\"P\", 0.65, \"d\"),\n",
    "    (\"Q\", 0.71, \"d\"),\n",
    "    (\"C\", 0.72, \"d\"),\n",
    "    (\"N\", 0.73, \"a\"),\n",
    "    (\"H\", 0.80, \"d\"),\n",
    "    (\"R\", 0.82, \"d\"),\n",
    "    (\"E\", 0.99, \"d\")\n",
    "]\n",
    "\n",
    "y_true = np.array([1 if label == \"a\" else 0 for (_, _, label) in data])\n",
    "\n",
    "y_prob = np.array([1 - score for (_, score, _) in data])\n",
    "\n",
    "def plot_roc_curve(y_true,y_prob):\n",
    "    fpr, tpr, thresholds = custom_roc_curve(y_true, y_prob)\n",
    "\n",
    "\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    plt.plot(fpr, tpr, marker='o', color='blue', label='Custom ROC Curve')\n",
    "    plt.plot([0, 1], [0, 1], linestyle='--', color='gray', label='Random Guess')\n",
    "    plt.xlabel(\"False Positive Rate\")\n",
    "    plt.ylabel(\"True Positive Rate\")\n",
    "    plt.title(\"ROC Curve (Custom Implementation)\")\n",
    "    plt.legend(loc=\"lower right\")\n",
    "    plt.grid(True)\n",
    "    plt.show()\n",
    "\n",
    "plot_roc_curve(y_true,y_prob)\n",
    "\n",
    "print(\"Thresholds:\", thresholds)\n",
    "print(\"FPR:\", fpr)\n",
    "print(\"TPR:\", tpr)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33559a28",
   "metadata": {
    "papermill": {
     "duration": 0.006834,
     "end_time": "2025-05-28T14:03:34.761331",
     "exception": false,
     "start_time": "2025-05-28T14:03:34.754497",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Problem 6. Apply your logistic regression classifier to the breast cancer Wisconsin dataset, which\n",
    "can either be loaded with python by following instructions from\n",
    "http://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_breast_cancer.html\n",
    "or downloaded from\n",
    "https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+(Diagnostic) .\n",
    "Randomly splitting the data into two subsets with one having 2/3 of the examples and the other\n",
    "one having the rest 1/3. Use the 2/3 subset to train a logistic regression model and the 1/3 subset\n",
    "to test the model. Plot the ROC curve on the testing set with your ROC plotting function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "29549c45",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-28T14:03:34.777276Z",
     "iopub.status.busy": "2025-05-28T14:03:34.776837Z",
     "iopub.status.idle": "2025-05-28T14:03:35.114832Z",
     "shell.execute_reply": "2025-05-28T14:03:35.113627Z"
    },
    "papermill": {
     "duration": 0.348302,
     "end_time": "2025-05-28T14:03:35.117121",
     "exception": false,
     "start_time": "2025-05-28T14:03:34.768819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Iteration 100: Log-Likelihood = -20.1904\n",
      "Iteration 200: Log-Likelihood = -18.5185\n",
      "Iteration 300: Log-Likelihood = -17.5129\n",
      "Iteration 400: Log-Likelihood = -16.7331\n",
      "Iteration 500: Log-Likelihood = -16.0770\n",
      "Iteration 600: Log-Likelihood = -15.5018\n",
      "Iteration 700: Log-Likelihood = -14.9856\n",
      "Iteration 800: Log-Likelihood = -14.5154\n",
      "Iteration 900: Log-Likelihood = -14.0830\n",
      "Iteration 1000: Log-Likelihood = -13.6826\n",
      "\n",
      "Optimal weights: [-0.94423662  0.04979962 -0.17911881  0.17420305 -0.41164271 -0.45656897\n",
      "  4.62922119 -1.06384802 -1.30579172  0.14190299 -2.13433543 -3.64182535\n",
      "  0.99769723  0.05269648 -3.39852484 -0.25507418 -0.26756603  1.87022267\n",
      " -1.28702879  1.02326976  0.60375823 -2.28628943 -2.82996019 -1.09754736\n",
      " -3.0135266  -0.8516352   0.51297735 -2.72951132 -2.14405307 -1.90002387\n",
      "  0.39794157]\n",
      "Final Log-Likelihood (Train): -13.682594589131396\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.datasets import load_breast_cancer\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "\n",
    "data = load_breast_cancer()\n",
    "X, y = data.data, data.target \n",
    "\n",
    "\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "\n",
    "X_bias = np.hstack([np.ones((X_scaled.shape[0], 1)), X_scaled])\n",
    "\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X_bias, y, test_size=1/3, random_state=42, stratify=y\n",
    ")\n",
    "\n",
    "\n",
    "def sigmoid(z):\n",
    "    return 1 / (1 + np.exp(-z))\n",
    "\n",
    "def log_likelihood(w, X, y):\n",
    "    z = X.dot(w)\n",
    "    return np.sum(y * z - np.log(1 + np.exp(z)))\n",
    "\n",
    "def gradient(w, X, y):\n",
    "    z = X.dot(w)\n",
    "    predictions = sigmoid(z)\n",
    "    return X.T.dot(y - predictions)\n",
    "\n",
    "\n",
    "learning_rate = 0.01\n",
    "num_iters = 1000\n",
    "\n",
    "\n",
    "w = np.zeros(X_train.shape[1])\n",
    "\n",
    "\n",
    "ll_history = []\n",
    "\n",
    "\n",
    "for i in range(num_iters):\n",
    "    grad = gradient(w, X_train, y_train)\n",
    "    w = w + learning_rate * grad\n",
    "    ll_history.append(log_likelihood(w, X_train, y_train))\n",
    "    \n",
    "    if (i+1) % 100 == 0:\n",
    "        print(f\"Iteration {i+1}: Log-Likelihood = {ll_history[-1]:.4f}\")\n",
    "\n",
    "print(\"\\nOptimal weights:\", w)\n",
    "print(\"Final Log-Likelihood (Train):\", ll_history[-1])\n",
    "\n",
    "\n",
    "\n",
    "y_test_prob = sigmoid(X_test.dot(w))\n",
    "\n",
    "def plot_roc(y_true, y_prob, title=\"ROC Curve\"):\n",
    "\n",
    "    fpr, tpr, thresholds = roc_curve(y_true, y_prob)\n",
    "    roc_auc = auc(fpr, tpr)\n",
    "    \n",
    "    plt.figure(figsize=(8, 6))\n",
    "    plt.plot(fpr, tpr, color='blue', lw=2, label=f\"ROC curve (AUC = {roc_auc:.2f})\")\n",
    "    plt.plot([0, 1], [0, 1], color='gray', lw=1, linestyle='--', label=\"Random guess\")\n",
    "    plt.xlim([0.0, 1.0])\n",
    "    plt.ylim([0.0, 1.05])\n",
    "    plt.xlabel(\"False Positive Rate\")\n",
    "    plt.ylabel(\"True Positive Rate\")\n",
    "    plt.title(title)\n",
    "    plt.legend(loc=\"lower right\")\n",
    "    plt.grid(True)\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "plot_roc(y_test, y_test_prob, title=\"ROC Curve - Breast Cancer Dataset\")\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 14.763804,
   "end_time": "2025-05-28T14:03:36.046439",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-28T14:03:21.282635",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
